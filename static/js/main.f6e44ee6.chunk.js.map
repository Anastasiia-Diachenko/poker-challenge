{"version":3,"sources":["components/Table/index.jsx","components/Button/index.jsx","components/Card/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","props","className","children","Button","type","onClick","buttonName","Card","winner","value","suite","App","useState","isShown","setIsShown","randoms1","setRandoms1","randoms2","setRandoms2","isWinner1","setIsWinner1","isWinner2","setIsWinner2","suits","cardValues","cards","s","length","v","suit","push","makeRandomCards","randomCard","arr","entity","random","Math","floor","cardValue","cardSuit","slice","map","i","Array","from","forEach","console","log","uniqueValuesFirstHand","Set","uniqueValuesSecondHand","size","getWinner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6e44ee6.chunk.js","sourcesContent":["import React from 'react'\nimport './Table.css';\n\nconst Table = (props) => {\n  return (\n    <div className=\"table\">{props.children}</div>\n  )\n}\n\nexport default Table;\n","import React from 'react'\nimport './Button.css';\n\nconst Button = (props) => {\n    return (\n      <button\n        type=\"button\"\n        className={props.className}\n        onClick={props.onClick}\n      >\n        <span className=\"buttonText\">{props.buttonName}</span>\n      </button>\n    )\n}\n\nexport default Button;\n","import React from 'react'\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.winner}`}>\n      <span>{props.value}</span>\n      <span>{props.suite}</span>\n    </div>\n  )\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport Table from \"./components/Table\";\nimport Button from \"./components/Button\";\nimport { GiDiamonds, GiHearts, GiClubs, GiSpades } from \"react-icons/gi\";\nimport Card from \"./components/Card\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [isShown, setIsShown] = useState(false);\n  const [randoms1, setRandoms1] = useState([]);\n  const [randoms2, setRandoms2] = useState([]);\n  const [isWinner1, setIsWinner1] = useState(false);\n  const [isWinner2, setIsWinner2] = useState(false);\n\n  const suits = [\"Hearts\", \"Diamonds\", \"Spades\", \"Clubs\"];\n  const cardValues = [\n    \"A\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"10\",\n    \"J\",\n    \"Q\",\n    \"K\",\n  ];\n\n  const makeRandomCards = () => {\n    const cards = [];\n    for (let s = 0; s < suits.length; s++) {\n      for (let v = 0; v < cardValues.length; v++) {\n        const value = cardValues[v];\n        const suit = suits[s];\n        cards.push({ value, suit });\n      }\n    }\n\n    return cards;\n  };\n\n  const cards = makeRandomCards();\n\n  const randomCard = (cards, arr) => {\n    const random = Math.floor(Math.random() * 51);\n    const cardValue = cards[random].value;\n    const cardSuit = cards[random].suit;\n    let entity;\n\n    if (cardSuit === \"Hearts\") entity = <GiHearts />;\n    if (cardSuit === \"Diamonds\") entity = <GiDiamonds />;\n    if (cardSuit === \"Spades\") entity = <GiSpades />;\n    if (cardSuit === \"Clubs\") entity = <GiClubs />;\n\n    return arr.push({ cardValue, entity });\n  };\n\n  const generateCards = () => {\n    Array.from(Array(5)).forEach(() => {\n      randomCard(cards, randoms1);\n    });\n\n    Array.from(Array(5)).forEach(() => {\n      randomCard(cards, randoms2);\n    });\n\n    setIsShown(false);\n    console.log(randoms1, randoms2);\n  };\n\n  const getWinner = () => {\n    const uniqueValuesFirstHand = new Set(randoms1.map((v) => v.cardValue));\n    const uniqueValuesSecondHand = new Set(randoms2.map((v) => v.cardValue));\n\n    console.log(uniqueValuesFirstHand, uniqueValuesSecondHand);\n\n    if (uniqueValuesFirstHand.size < uniqueValuesSecondHand.size) {\n      setIsWinner1(true);\n    }\n\n    if (uniqueValuesFirstHand.size > uniqueValuesSecondHand.size) {\n      setIsWinner2(true);\n    }\n\n    if (uniqueValuesFirstHand.size === uniqueValuesSecondHand.size) {\n      return;\n    }\n  };\n\n  const showCards = () => {\n    setIsShown(!isShown);\n    getWinner();\n  };\n\n  const resetCards = () => {\n    setRandoms1([]);\n    setRandoms2([]);\n    setIsWinner1(false);\n    setIsWinner2(false);\n    setIsShown(!isShown);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"cards-container\">\n        {isShown && (\n          <div className=\"card-container ml\">\n            {randoms1.slice(0, 5).map((random, i) => (\n              <Card\n                key={i}\n                value={random.cardValue}\n                suite={random.entity}\n                winner={isWinner1 ? \"winner\" : \"\"}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n      {isShown && (\n        <span className=\"winner-title\">\n          WINNER:{\" \"}\n          {(isWinner1 ? '1 PLAYER' : \"\") ||\n            (isWinner2 ? '2 PLAYER' : \"\") ||\n            (!isWinner1 && !isWinner2 ? \"DRAW\" : \"\") ||\n            null}\n        </span>\n      )}\n      <Table>\n        <Button\n          className=\"button\"\n          buttonName=\"Generate Cards\"\n          onClick={generateCards}\n        />\n        <Button\n          className=\"button\"\n          buttonName=\"Show Cards\"\n          onClick={showCards}\n        />\n      </Table>\n      <Button className=\"button button-center\" buttonName=\"NEW GAME\" onClick={resetCards} />\n      {isShown && (\n        <div className=\"card-container mr\">\n          {randoms2.slice(0, 5).map((random, i) => (\n            <Card\n              key={i}\n              value={random.cardValue}\n              suite={random.entity}\n              winner={isWinner2 ? \"winner\" : \"\"}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}